{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "b173b3cf-ae73-4c5b-a71c-5cfb3bbab30e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.5\n"
     ]
    }
   ],
   "source": [
    "#Functions\n",
    "#Types of Arguments\n",
    "#Positional Arguments1\n",
    "def division(a,b):\n",
    "    if b==0:\n",
    "        print('Zero divisible is not posiible')\n",
    "    return a/b\n",
    "c,d=5,10\n",
    "res=division(c,d)\n",
    "print(res)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "f81fee46-73ff-4b4e-a120-c7dc86cd856f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2.0\n"
     ]
    }
   ],
   "source": [
    "#Positional Arguments2\n",
    "def division(a,b):\n",
    "    if b==0:\n",
    "        print('Zero divisible is not posiible')\n",
    "    return a/b\n",
    "c,d=5,10\n",
    "res=division(d,c)\n",
    "print(res)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "68bc3148-710a-4006-a16f-4ed0da298424",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5.0\n"
     ]
    }
   ],
   "source": [
    "#Default Arguments1\n",
    "def division(a,b=1):\n",
    "    if b==0:\n",
    "        print('Zero divisible is not posiible')\n",
    "    return a/b\n",
    "c,d=5,10\n",
    "res=division(c)\n",
    "print(res)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "14eda252-1849-4dde-816d-e0b53e197d1d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2.0\n"
     ]
    }
   ],
   "source": [
    "#Default Arguments1\n",
    "def division(a,b=1):\n",
    "    if b==0:\n",
    "        print('Zero divisible is not posiible')\n",
    "    return a/b\n",
    "c,d=5,10\n",
    "res=division(d,c)\n",
    "print(res)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "4adccc90-3f9d-4877-bda0-d2dd4cb2c0cd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "8\n"
     ]
    }
   ],
   "source": [
    "#Default Arguments3\n",
    "def counter(a,b=1):\n",
    "    return a+b\n",
    "c,d=5,10\n",
    "res=counter(c,3)\n",
    "print(res)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "143fa482-80ad-405e-be29-57b85e87b3c2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'tuple'>\n",
      "6\n"
     ]
    }
   ],
   "source": [
    "#Variable length Arguments1\n",
    "def addition(a,*args):\n",
    "    s = 0\n",
    "    for num in args:\n",
    "        s += num\n",
    "    print(type(args))  \n",
    "    return s+a\n",
    "\n",
    "res = addition(1, 2,3)\n",
    "print(res)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5f18121f-7d3c-44f1-8ee1-a7d887f746ba",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Variable length Arguments2\n",
    "def addition(*args):\n",
    "    s = 0\n",
    "    for num in args:\n",
    "        s += num\n",
    "    print(type(args))  \n",
    "    return s\n",
    "\n",
    "res = addition(1, 2)\n",
    "print(res)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "7efa137f-e6e0-49b3-80aa-fe5b2b6c89f1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'dict'>\n",
      "{'a': 2, 'b': 6}\n"
     ]
    }
   ],
   "source": [
    "#Variable length keyword Arguments1\n",
    "def addition(**kwargs):\n",
    "    print(type(kwargs))  \n",
    "    return kwargs\n",
    "\n",
    "res = addition(a=2,b=6)\n",
    "print(res)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "f0345eb2-789a-4322-b00f-63bdf2039e80",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'dict'>\n",
      "{'fname': 'Roma', 'lname': 'Reddy'}\n",
      "Roma\n"
     ]
    }
   ],
   "source": [
    "#Variable length keyword Arguments2\n",
    "def my_function(**kids):\n",
    "    print(type(kids))\n",
    "    print(kids)\n",
    "    print(kids['fname'])\n",
    "\n",
    "my_function(fname='Roma',lname='Reddy')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1f8dab89-3eed-4c23-9a5b-abfe2d5207cc",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
